{
  "edges": [
    {
      "fromNode": "5311852f472bb621",
      "fromSide": "bottom",
      "id": "90a93ed0c0861454",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "7e79e3cf119a0f2e",
      "toSide": "top"
    },
    {
      "fromNode": "5311852f472bb621",
      "fromSide": "bottom",
      "id": "8af675cc0fed941d",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "c753e479e477d064",
      "toSide": "top"
    },
    {
      "fromNode": "5311852f472bb621",
      "fromSide": "bottom",
      "id": "6b7bbfff731415f3",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "21782d01dd89efd5",
      "toSide": "top"
    },
    {
      "fromNode": "5311852f472bb621",
      "fromSide": "bottom",
      "id": "f7abc60b28133d78",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "e5a5545167069be1",
      "toSide": "top"
    },
    {
      "fromNode": "06c77fa19c14edf3",
      "fromSide": "bottom",
      "id": "840294ba2cb1c76d",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "dbd55d6f73df9feb",
      "toSide": "top"
    },
    {
      "fromNode": "0e8091b305e7fae5",
      "fromSide": "bottom",
      "id": "2aca0d93316b0305",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "3d0de73d30c363f8",
      "toSide": "top"
    },
    {
      "fromNode": "cb619ba78ca4ed6e",
      "fromSide": "right",
      "id": "ead386c02aa20f2a",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "92f0e85f0d6f6f12",
      "toSide": "left"
    },
    {
      "fromNode": "92f0e85f0d6f6f12",
      "fromSide": "bottom",
      "id": "494e4e516f71f6a4",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "f1811824cbd2eada",
      "toSide": "top"
    },
    {
      "fromNode": "f1811824cbd2eada",
      "fromSide": "left",
      "id": "3712cc4799980ab6",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "328af62d958cab21",
      "toSide": "right"
    },
    {
      "fromNode": "328af62d958cab21",
      "fromSide": "top",
      "id": "2562628f047e1358",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "cb619ba78ca4ed6e",
      "toSide": "bottom"
    },
    {
      "fromNode": "b02e286b238b7f98",
      "fromSide": "top",
      "id": "7cf4fc729ef65679",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "5f8e47ce871e45b2",
      "toSide": "bottom"
    },
    {
      "fromNode": "5f8e47ce871e45b2",
      "fromSide": "top",
      "id": "3f357273f6909d07",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "328af62d958cab21",
      "toSide": "bottom"
    },
    {
      "fromNode": "9721b3aa6dcfd1a6",
      "fromSide": "bottom",
      "id": "3fa5342dc0f46af2",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "9c46c129035ead5d",
      "toSide": "top"
    },
    {
      "fromNode": "9721b3aa6dcfd1a6",
      "fromSide": "bottom",
      "id": "9a4dafc812a15cdc",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "c2af52c4656c8bfc",
      "toSide": "top"
    },
    {
      "fromNode": "9721b3aa6dcfd1a6",
      "fromSide": "bottom",
      "id": "63f2799a2caa9bd4",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "d01c7c74440987a8",
      "toSide": "top"
    },
    {
      "fromNode": "eb8244278f7b9b65",
      "fromSide": "bottom",
      "id": "923b140c5930f226",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "465564df0390b3f1",
      "toSide": "top"
    },
    {
      "fromNode": "465564df0390b3f1",
      "fromSide": "right",
      "id": "abf72908726f61bc",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "630af48e1f46e0b2",
      "toSide": "left"
    },
    {
      "fromNode": "ada052d7523021c9",
      "fromSide": "right",
      "id": "7d6a656eff640855",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "2c990d04f6a06d9a",
      "toSide": "left"
    },
    {
      "fromNode": "ada052d7523021c9",
      "fromSide": "right",
      "id": "1beb9ca682734d63",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "e0257c0f7299c365",
      "toSide": "left"
    },
    {
      "fromNode": "ada052d7523021c9",
      "fromSide": "right",
      "id": "f55069c24058387f",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "bc53a9425515245e",
      "toSide": "left"
    },
    {
      "fromNode": "ada052d7523021c9",
      "fromSide": "right",
      "id": "f39a6d1623bb904e",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "6c4951da0951d221",
      "toSide": "left"
    },
    {
      "fromNode": "ee165c33a6ae0f29",
      "fromSide": "right",
      "id": "1cf4a615acc415c5",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "2c990d04f6a06d9a",
      "toSide": "left"
    },
    {
      "fromNode": "ee165c33a6ae0f29",
      "fromSide": "right",
      "id": "acc6b9d7f37a866f",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "e0257c0f7299c365",
      "toSide": "left"
    },
    {
      "fromNode": "ee165c33a6ae0f29",
      "fromSide": "right",
      "id": "aa071a7c36b29b7a",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "bc53a9425515245e",
      "toSide": "left"
    },
    {
      "fromNode": "ee165c33a6ae0f29",
      "fromSide": "right",
      "id": "5fdd663c4c8f3be0",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "6c4951da0951d221",
      "toSide": "left"
    },
    {
      "fromNode": "6ed9eca59ee9d99f",
      "fromSide": "right",
      "id": "8ea808dd9fb6f377",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "2c990d04f6a06d9a",
      "toSide": "left"
    },
    {
      "fromNode": "6ed9eca59ee9d99f",
      "fromSide": "right",
      "id": "addca6e158786248",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "e0257c0f7299c365",
      "toSide": "left"
    },
    {
      "fromNode": "6ed9eca59ee9d99f",
      "fromSide": "right",
      "id": "8edf4d0bd7b637b4",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "bc53a9425515245e",
      "toSide": "left"
    },
    {
      "fromNode": "6ed9eca59ee9d99f",
      "fromSide": "right",
      "id": "abf7b6550209d90b",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "6c4951da0951d221",
      "toSide": "left"
    },
    {
      "fromNode": "2c990d04f6a06d9a",
      "fromSide": "right",
      "id": "7072565f3a092cb5",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "50d7ab3d8ec75574",
      "toSide": "left"
    },
    {
      "fromNode": "e0257c0f7299c365",
      "fromSide": "right",
      "id": "871f211bf4a585cb",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "ce65cefacbaa1ad7",
      "toSide": "left"
    },
    {
      "fromNode": "bc53a9425515245e",
      "fromSide": "right",
      "id": "787588b4ed89f208",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "7050416936de102d",
      "toSide": "left"
    },
    {
      "fromNode": "6c4951da0951d221",
      "fromSide": "right",
      "id": "8faa359d827aac03",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "ea72602c2e77c6cb",
      "toSide": "left"
    },
    {
      "fromNode": "2c990d04f6a06d9a",
      "fromSide": "right",
      "id": "b4d13de8328be626",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "ce65cefacbaa1ad7",
      "toSide": "left"
    },
    {
      "fromNode": "2c990d04f6a06d9a",
      "fromSide": "right",
      "id": "86f26b8617e83166",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "7050416936de102d",
      "toSide": "left"
    },
    {
      "fromNode": "2c990d04f6a06d9a",
      "fromSide": "right",
      "id": "d87edc3535a46415",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "ea72602c2e77c6cb",
      "toSide": "left"
    },
    {
      "fromNode": "e0257c0f7299c365",
      "fromSide": "right",
      "id": "a2548661ccf46377",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "50d7ab3d8ec75574",
      "toSide": "left"
    },
    {
      "fromNode": "e0257c0f7299c365",
      "fromSide": "right",
      "id": "1b7f987e6e299894",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "7050416936de102d",
      "toSide": "left"
    },
    {
      "fromNode": "e0257c0f7299c365",
      "fromSide": "right",
      "id": "329d6595ac85c8ad",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "ea72602c2e77c6cb",
      "toSide": "left"
    },
    {
      "fromNode": "bc53a9425515245e",
      "fromSide": "right",
      "id": "1687a6d5ead729a5",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "50d7ab3d8ec75574",
      "toSide": "left"
    },
    {
      "fromNode": "bc53a9425515245e",
      "fromSide": "right",
      "id": "7daac516b2ed1ff4",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "ce65cefacbaa1ad7",
      "toSide": "left"
    },
    {
      "fromNode": "bc53a9425515245e",
      "fromSide": "right",
      "id": "56d5a3f64d37701c",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "ea72602c2e77c6cb",
      "toSide": "left"
    },
    {
      "fromNode": "6c4951da0951d221",
      "fromSide": "right",
      "id": "c0bb28bfe74e706a",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "50d7ab3d8ec75574",
      "toSide": "left"
    },
    {
      "fromNode": "6c4951da0951d221",
      "fromSide": "right",
      "id": "a0743d78d952038a",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "ce65cefacbaa1ad7",
      "toSide": "left"
    },
    {
      "fromNode": "6c4951da0951d221",
      "fromSide": "right",
      "id": "b459ac87ba73bd89",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "7050416936de102d",
      "toSide": "left"
    },
    {
      "fromNode": "50d7ab3d8ec75574",
      "fromSide": "right",
      "id": "85c566a7242553e6",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "5bf2d450c62a05d6",
      "toSide": "left"
    },
    {
      "fromNode": "50d7ab3d8ec75574",
      "fromSide": "right",
      "id": "d1b896723d2606ef",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "5aa6e984a15cab0e",
      "toSide": "left"
    },
    {
      "fromNode": "ce65cefacbaa1ad7",
      "fromSide": "right",
      "id": "ec7df814604769c4",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "5bf2d450c62a05d6",
      "toSide": "left"
    },
    {
      "fromNode": "ce65cefacbaa1ad7",
      "fromSide": "right",
      "id": "6a7232980a6c72bc",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "5aa6e984a15cab0e",
      "toSide": "left"
    },
    {
      "fromNode": "7050416936de102d",
      "fromSide": "right",
      "id": "83b8ad419a7155a5",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "5bf2d450c62a05d6",
      "toSide": "left"
    },
    {
      "fromNode": "7050416936de102d",
      "fromSide": "right",
      "id": "16045a0b2237be60",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "5aa6e984a15cab0e",
      "toSide": "left"
    },
    {
      "fromNode": "ea72602c2e77c6cb",
      "fromSide": "right",
      "id": "f3aad70a13a8dcfc",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "5bf2d450c62a05d6",
      "toSide": "left"
    },
    {
      "fromNode": "ea72602c2e77c6cb",
      "fromSide": "right",
      "id": "f3b175e6f5c3e416",
      "styleAttributes": {
        "pathfindingMethod": "direct"
      },
      "toNode": "5aa6e984a15cab0e",
      "toSide": "left"
    },
    {
      "fromNode": "a82b15ca3218734e",
      "fromSide": "bottom",
      "id": "a60bc34d231c3221",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "301f4cc3563c5978",
      "toSide": "top"
    },
    {
      "fromNode": "301f4cc3563c5978",
      "fromSide": "left",
      "id": "eda98ed163d64d4d",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "05708296272f790a",
      "toSide": "right"
    },
    {
      "fromNode": "05708296272f790a",
      "fromSide": "top",
      "id": "c2f67b3a96078797",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "3aad5b36e6d028e6",
      "toSide": "bottom"
    },
    {
      "fromNode": "3aad5b36e6d028e6",
      "fromSide": "right",
      "id": "9b015eb3f2b8efad",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "41933d53c4dfef54",
      "toSide": "left"
    },
    {
      "fromNode": "41933d53c4dfef54",
      "fromSide": "right",
      "id": "fae75eac0a11319c",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "a82b15ca3218734e",
      "toSide": "left"
    },
    {
      "fromNode": "75ab7a645db8ee7e",
      "fromSide": "bottom",
      "id": "0867ff89dedd138c",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "bda5cf10c4a4db39",
      "toSide": "top"
    },
    {
      "fromNode": "75ab7a645db8ee7e",
      "fromSide": "bottom",
      "id": "b707a39af894ae55",
      "styleAttributes": {
        "pathfindingMethod": "square"
      },
      "toNode": "38a337aaa412bf53",
      "toSide": "top"
    }
  ],
  "nodes": [
    {
      "color": "#fb00ff",
      "height": 5800,
      "id": "ae2b3286821c1a41",
      "label": "Computational Intelligence",
      "styleAttributes": {
      },
      "type": "group",
      "width": 11080,
      "x": -280,
      "y": -440
    },
    {
      "color": "2",
      "height": 3320,
      "id": "6c46668e8aaf072a",
      "label": "ANN Artificial Neural Networks",
      "styleAttributes": {
      },
      "type": "group",
      "width": 5200,
      "x": -240,
      "y": 2000
    },
    {
      "color": "4",
      "height": 3210,
      "id": "d761d7c9e3157dea",
      "label": "Convolutional Neural Network",
      "type": "group",
      "width": 2440,
      "x": 2080,
      "y": 2080
    },
    {
      "color": "5",
      "height": 3210,
      "id": "459b0f865c0787b3",
      "label": "Multi-Layer Perceptron",
      "type": "group",
      "width": 2200,
      "x": -200,
      "y": 2060
    },
    {
      "color": "1",
      "height": 2360,
      "id": "e04954ab57484210",
      "label": "GA",
      "styleAttributes": {
      },
      "type": "group",
      "width": 2280,
      "x": 8400,
      "y": -400
    },
    {
      "color": "1",
      "height": 1320,
      "id": "3abd125d16d94d96",
      "label": "SI",
      "styleAttributes": {
      },
      "type": "group",
      "width": 2280,
      "x": -240,
      "y": 640
    },
    {
      "color": "4",
      "height": 1320,
      "id": "b6f85fedc382414f",
      "label": "RL",
      "styleAttributes": {
      },
      "type": "group",
      "width": 2280,
      "x": 8400,
      "y": 2000
    },
    {
      "color": "4",
      "height": 520,
      "id": "324f1f7dde7356ad",
      "label": "Tasks",
      "styleAttributes": {
      },
      "type": "group",
      "width": 1280,
      "x": -220,
      "y": -200
    },
    {
      "color": "#ff00dd",
      "height": 460,
      "id": "4243ba19f4f7e394",
      "label": "Training",
      "type": "group",
      "width": 1180,
      "x": -160,
      "y": 4400
    },
    {
      "height": 140,
      "id": "b02e286b238b7f98",
      "label": "Problem",
      "styleAttributes": {
      },
      "type": "group",
      "width": 500,
      "x": 8440,
      "y": 680
    },
    {
      "color": "2",
      "height": 340,
      "id": "4e7df5f3455252ae",
      "label": "hidden",
      "type": "group",
      "width": 200,
      "x": 780,
      "y": 2200
    },
    {
      "color": "1",
      "height": 340,
      "id": "d1e6be128c9e0155",
      "label": "input",
      "type": "group",
      "width": 100,
      "x": 680,
      "y": 2200
    },
    {
      "color": "3",
      "height": 340,
      "id": "5ede19ddfd7784e0",
      "label": "output",
      "type": "group",
      "width": 100,
      "x": 980,
      "y": 2200
    },
    {
      "height": 150,
      "id": "06c77fa19c14edf3",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "ACO Ant Colony Optimization",
      "type": "text",
      "width": 400,
      "x": 1140,
      "y": 720
    },
    {
      "height": 150,
      "id": "dbd55d6f73df9feb",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Evaporation\nreducing pheromone levels over time in ant colony optimization to avoid converging too soon.\n",
      "type": "text",
      "width": 400,
      "x": 1040,
      "y": 1040
    },
    {
      "height": 160,
      "id": "324ba1ebf44ad1c8",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Chinese room thought experiment\n\nMachines might be able to demonstrate “intelligent behavior” while not being conscious or having under- standing in a human sense.",
      "type": "text",
      "width": 600,
      "x": 1180,
      "y": -80
    },
    {
      "height": 150,
      "id": "c753e479e477d064",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Velocity\nthe speed and direction a particle moves in PSO to explore different areas of the solution space.\n",
      "type": "text",
      "width": 400,
      "x": 620,
      "y": 1260
    },
    {
      "height": 260,
      "id": "e37acc5c242057ab",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Frame problem\nthe challenge of determining which pieces of information are important when conditions change.\n\nThe frame problem is so difficult to solve, because we don’t know everything contextually required, to solve a particular problem, so we cannot convey all the relevant data to an AI agent.\n",
      "type": "text",
      "width": 500,
      "x": 460,
      "y": -160
    },
    {
      "height": 150,
      "id": "e5a5545167069be1",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "**Exploration vs exploitation**\nbalancing trying new solutions with refining known good ones to find the best answer.\n",
      "type": "text",
      "width": 400,
      "x": 320,
      "y": 960
    },
    {
      "height": 150,
      "id": "21782d01dd89efd5",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "**PSO formula**\nequations that update a particle's velocity and position based on current and best-found solutions.\n\n\n",
      "type": "text",
      "width": 400,
      "x": 180,
      "y": 1260
    },
    {
      "height": 150,
      "id": "7e79e3cf119a0f2e",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Solution Space\nthe entire set of possible answers a problem can have.\n",
      "type": "text",
      "width": 400,
      "x": -160,
      "y": 1120
    },
    {
      "height": 150,
      "id": "5311852f472bb621",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "PSO Particle Swarm Optimization\na method where particles fly through the solution space, guided by their own and neighbors' best positions.\n",
      "type": "text",
      "width": 400,
      "x": -100,
      "y": 740
    },
    {
      "height": 50,
      "id": "9cd97802fd020405",
      "styleAttributes": {
        "border": "invisible",
        "textAlign": "center"
      },
      "text": "using the collective behaviors of simple agents to solve complicated problems.\n",
      "type": "text",
      "width": 400,
      "x": -200,
      "y": 660
    },
    {
      "height": 150,
      "id": "e74cdbc99f4d1ce5",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Regression\npredicting a continuous value, such as forecasting temperatures or prices.\n",
      "type": "text",
      "width": 400,
      "x": 20,
      "y": 100
    },
    {
      "height": 150,
      "id": "b3d5b95f82fc581b",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Classification\nsorting data into groups based on similar features.\n",
      "type": "text",
      "width": 400,
      "x": -40,
      "y": -100
    },
    {
      "height": 60,
      "id": "b76abff4d15004ef",
      "styleAttributes": {
        "border": "invisible",
        "textAlign": "center"
      },
      "text": "= methods inspired by nature to solve complex problems using adaptive algorithms.",
      "type": "text",
      "width": 400,
      "x": -220,
      "y": -400
    },
    {
      "height": 68,
      "id": "14da08bd61e3f170",
      "styleAttributes": {
        "border": "invisible",
        "textAlign": "center"
      },
      "text": "interconnected units mimic the human brain.\n",
      "type": "text",
      "width": 400,
      "x": -180,
      "y": 2060
    },
    {
      "height": 44,
      "id": "301f4cc3563c5978",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "calculate gradient descent update",
      "type": "text",
      "width": 294,
      "x": 480,
      "y": 4620
    },
    {
      "height": 44,
      "id": "a82b15ca3218734e",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "compute prediction's loss",
      "type": "text",
      "width": 269,
      "x": 660,
      "y": 4480
    },
    {
      "file": "attachments/cnnvisual.png",
      "height": 179,
      "id": "4b21869b9ab599c9",
      "styleAttributes": {
      },
      "type": "file",
      "width": 400,
      "x": 1220,
      "y": 4520
    },
    {
      "height": 240,
      "id": "9721b3aa6dcfd1a6",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "CNN Convolutional Neural Network\n![[cnnvisual.png]]\n\na type of neural network that uses convolution layers to analyze images and signals.\n",
      "type": "text",
      "width": 400,
      "x": 1120,
      "y": 4760
    },
    {
      "height": 150,
      "id": "9c46c129035ead5d",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Convolution\nsliding a filter over data to extract key features like edges in an image.\n",
      "type": "text",
      "width": 400,
      "x": 700,
      "y": 5100
    },
    {
      "height": 150,
      "id": "c2af52c4656c8bfc",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "**Feature map**\nthe grid of outputs from a convolution layer that shows the presence of specific patterns.\n",
      "type": "text",
      "width": 400,
      "x": 1120,
      "y": 5100
    },
    {
      "height": 150,
      "id": "d01c7c74440987a8",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "**Activation functions**\na formula applied to a neuron's output to decide whether it should be passed on.\n",
      "type": "text",
      "width": 400,
      "x": 1540,
      "y": 5100
    },
    {
      "height": 44,
      "id": "3aad5b36e6d028e6",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "next data sample",
      "type": "text",
      "width": 213,
      "x": -40,
      "y": 4500
    },
    {
      "height": 44,
      "id": "05708296272f790a",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "back propagate to update weights",
      "type": "text",
      "width": 299,
      "x": -20,
      "y": 4620
    },
    {
      "height": 68,
      "id": "41933d53c4dfef54",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "forward propagates through network",
      "type": "text",
      "width": 292,
      "x": 220,
      "y": 4420
    },
    {
      "height": 895,
      "id": "75ab7a645db8ee7e",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Hidden Layer Activation Functions\n![[Pasted image 20250416225908.png|300]]\n\nThe hidden layer needs activation functions to learn non-linear relationships.\n1. Sigmoid (maps to 0 through 1)\n\t- ❌ small and large values vanish the gradient.\n\t- ❌ not zero centered\n2. tanh (maps to -1 through 1)\n\t- ❌ vanishing gradient\n\t- ✅ zero centered\n3. ReLU (positive linear)\n\t- ✅ no vanishing gradient\n\t- ❌ dying ReLU\n4. LReLU (piecewise linear)\n\t- ✅ no vanishing gradient\n\t- ✅ no dying ReLU\n\n\n",
      "type": "text",
      "width": 1020,
      "x": -160,
      "y": 2760
    },
    {
      "height": 60,
      "id": "6c4951da0951d221",
      "styleAttributes": {
        "border": null,
        "shape": "circle",
        "textAlign": "center"
      },
      "text": "",
      "type": "text",
      "width": 60,
      "x": 800,
      "y": 2460
    },
    {
      "height": 60,
      "id": "ea72602c2e77c6cb",
      "styleAttributes": {
        "border": null,
        "shape": "circle",
        "textAlign": "center"
      },
      "text": "",
      "type": "text",
      "width": 60,
      "x": 900,
      "y": 2460
    },
    {
      "height": 60,
      "id": "5bf2d450c62a05d6",
      "styleAttributes": {
        "border": null,
        "shape": "circle",
        "textAlign": "center"
      },
      "text": "",
      "type": "text",
      "width": 60,
      "x": 1000,
      "y": 2294
    },
    {
      "height": 60,
      "id": "e0257c0f7299c365",
      "styleAttributes": {
        "border": null,
        "shape": "circle",
        "textAlign": "center"
      },
      "text": "",
      "type": "text",
      "width": 60,
      "x": 800,
      "y": 2300
    },
    {
      "height": 60,
      "id": "ce65cefacbaa1ad7",
      "styleAttributes": {
        "border": null,
        "shape": "circle",
        "textAlign": "center"
      },
      "text": "",
      "type": "text",
      "width": 60,
      "x": 900,
      "y": 2300
    },
    {
      "height": 60,
      "id": "5aa6e984a15cab0e",
      "styleAttributes": {
        "border": null,
        "shape": "circle",
        "textAlign": "center"
      },
      "text": "",
      "type": "text",
      "width": 60,
      "x": 1000,
      "y": 2374
    },
    {
      "height": 60,
      "id": "bc53a9425515245e",
      "styleAttributes": {
        "border": null,
        "shape": "circle",
        "textAlign": "center"
      },
      "text": "",
      "type": "text",
      "width": 60,
      "x": 800,
      "y": 2380
    },
    {
      "height": 60,
      "id": "7050416936de102d",
      "styleAttributes": {
        "border": null,
        "shape": "circle",
        "textAlign": "center"
      },
      "text": "",
      "type": "text",
      "width": 60,
      "x": 900,
      "y": 2380
    },
    {
      "height": 60,
      "id": "2c990d04f6a06d9a",
      "styleAttributes": {
        "border": null,
        "shape": "circle",
        "textAlign": "center"
      },
      "text": "",
      "type": "text",
      "width": 60,
      "x": 800,
      "y": 2220
    },
    {
      "height": 60,
      "id": "50d7ab3d8ec75574",
      "styleAttributes": {
        "border": null,
        "shape": "circle",
        "textAlign": "center"
      },
      "text": "",
      "type": "text",
      "width": 60,
      "x": 900,
      "y": 2220
    },
    {
      "height": 60,
      "id": "ada052d7523021c9",
      "styleAttributes": {
        "border": null,
        "shape": "circle",
        "textAlign": "center"
      },
      "text": "",
      "type": "text",
      "width": 60,
      "x": 700,
      "y": 2260
    },
    {
      "height": 60,
      "id": "ee165c33a6ae0f29",
      "styleAttributes": {
        "border": null,
        "shape": "circle",
        "textAlign": "center"
      },
      "text": "",
      "type": "text",
      "width": 60,
      "x": 700,
      "y": 2340
    },
    {
      "height": 60,
      "id": "6ed9eca59ee9d99f",
      "styleAttributes": {
        "border": null,
        "shape": "circle",
        "textAlign": "center"
      },
      "text": "",
      "type": "text",
      "width": 60,
      "x": 700,
      "y": 2420
    },
    {
      "height": 92,
      "id": "d769b9d1390a8875",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Loss functions\n\n",
      "type": "text",
      "width": 194,
      "x": 1100,
      "y": 2260
    },
    {
      "height": 740,
      "id": "277f1d753ffe4d87",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Output Layer Activation Functions\nThe output layer computes the final linear combinations and calls all these results \"logits\".\nThe logits can be passed into a final activation function to arrive at something useful\n1. Binary classification: use sigmoid(z) LOSS=binary cross-entropy\n2. Multiclass classification (mutually exclusive labels): use softmax(zi), where i is the considered label LOSS=categorical cross-entropy\n3. Multiclass classification (maybe overlapping labels) use sigmoid(zi) LOSS=binary cross-entropy per output\n4. Regression: use raw logit z (or zi if there are multiple output nodes) LOSS=MSE\n- sigmoid(z)\n\n![[Pasted image 20250416232432.png|500]]\n\n",
      "type": "text",
      "width": 1020,
      "x": 960,
      "y": 2600
    },
    {
      "height": 312,
      "id": "bda5cf10c4a4db39",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "dying ReLU\nIf a neuron’s input is always negative, the gradient will be zero, and the neuron will stop learning (this happens for the entire neuron, not just a single instance). This is called \"dying ReLU.\"",
      "type": "text",
      "width": 460,
      "x": -100,
      "y": 3760
    },
    {
      "height": 116,
      "id": "38a337aaa412bf53",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Vanishing Gradient\nsmall gradients get smaller through backpropagation and reduce the ability to learn",
      "type": "text",
      "width": 295,
      "x": 460,
      "y": 3760
    },
    {
      "height": 212,
      "id": "d046404286422757",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Combat Underfitting\n-Increase network complexity\n\n(universal approximation theorem: a network with just one hidden layer can approximate any function, given enough neurons)",
      "type": "text",
      "width": 294,
      "x": 1000,
      "y": 3520
    },
    {
      "height": 400,
      "id": "49375f4f81251361",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Combat Overfitting\n- Ensure training set is i.i.d. from validation set\n- Gather more data\n- Augment data (reuse in altered way)\n- Decrease network complexity\n- Regularize:\n\t- ![[Pasted image 20250416233022.png]]",
      "type": "text",
      "width": 380,
      "x": 1100,
      "y": 3840
    },
    {
      "height": 480,
      "id": "17be59681af2dcf8",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Weight initialization:\nIf all weights are initialized at 0, all neurons would learn the same features.\nChoices:\n- Gaussian distribution, 0 mean, 1 variance\n- When using sigmoid/tanh: xavier initialization\n- When using ReLU/LReLU: He initialization\n![[Pasted image 20250416233235.png]]",
      "type": "text",
      "width": 560,
      "x": 440,
      "y": 3900
    },
    {
      "file": "attachments/Pasted image 20250416233307.png",
      "height": 171,
      "id": "589734d22c8ad2d1",
      "type": "file",
      "width": 400,
      "x": 1480,
      "y": 3520
    },
    {
      "height": 92,
      "id": "6e73dbc2b446b9dc",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Chromosome\na string or representation of a candidate solution in a genetic algorithm.",
      "type": "text",
      "width": 576,
      "x": 8640,
      "y": 1040
    },
    {
      "height": 150,
      "id": "0e8091b305e7fae5",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Roulette Wheel Selection\na technique where candidates are chosen based on probability proportional to their fitness.\n",
      "type": "text",
      "width": 400,
      "x": 8708,
      "y": 1160
    },
    {
      "height": 150,
      "id": "0c1e06c446c69493",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "**R(s')**\nthe reward received when arriving at a new state s', helping measure success.\n",
      "type": "text",
      "width": 400,
      "x": 9120,
      "y": 2420
    },
    {
      "height": 150,
      "id": "797d2c059ce5d268",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "**Utility function**\na tool to measure the benefit of an action, guiding a system towards achieving its goal.\n",
      "type": "text",
      "width": 400,
      "x": 9120,
      "y": 2220
    },
    {
      "height": 60,
      "id": "b94e55db009d71dd",
      "styleAttributes": {
        "border": "invisible",
        "textAlign": "center"
      },
      "text": "learning through trial and error where actions are rewarded or punished.\n",
      "type": "text",
      "width": 400,
      "x": 8440,
      "y": 2040
    },
    {
      "height": 150,
      "id": "3d0de73d30c363f8",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "A chromosome's probability of being selected\n\ndetermined by its fitness, influencing chances to evolve.\n",
      "type": "text",
      "width": 400,
      "x": 8840,
      "y": 1432
    },
    {
      "height": 150,
      "id": "70ffab3d6f2895e1",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "**Reward formulation**\ndesigning reward signals so that an agent learns to make the right decisions.\n",
      "type": "text",
      "width": 400,
      "x": 8700,
      "y": 2440
    },
    {
      "height": 150,
      "id": "9c960a019fcd54c9",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "**R(s,a,s')**\nthe reward obtained when taking action a in state s and ending up in state s′.\n",
      "type": "text",
      "width": 400,
      "x": 9280,
      "y": 2600
    },
    {
      "height": 150,
      "id": "0a019d7aea308ffe",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "**Pr(r | s, a, s')**\nthe chance of getting reward r when you take action a in state s and reach state s′.\n",
      "type": "text",
      "width": 400,
      "x": 8560,
      "y": 2700
    },
    {
      "file": "attachments/fitnessofchromosome.png",
      "height": 240,
      "id": "5df7cdc695cb4bf9",
      "styleAttributes": {
      },
      "type": "file",
      "width": 624,
      "x": 9400,
      "y": -360
    },
    {
      "height": 200,
      "id": "827f34e8286d27f5",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Fitness Function\nthe value that tells you how well a candidate solution performs on a given task\n\nThe fitness function specifies the objective for the behavior modeled by the transfer function.",
      "type": "text",
      "width": 440,
      "x": 9640,
      "y": 0
    },
    {
      "height": 782,
      "id": "465564df0390b3f1",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Pareto Optimal Solution\n![[paretooptimalsolutions.png]]\n\nA solution is pareto optimal if no other solution exists, that improves any objective(s) without degrading performance in any other objective function.\n\n![[Pasted image 20250416220127.png]]\n\nA solution pareto dominates another solution if it is better on all accounts.\n\n\n\n",
      "type": "text",
      "width": 280,
      "x": 9760,
      "y": 660
    },
    {
      "height": 774,
      "id": "630af48e1f46e0b2",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "NSGA II, Pareto Rank\n![[Pasted image 20250416220602.png]]\nYou can find multiple non-dominated fronts of solutions by repeatedly taking out the non-dominated front, then finding another (newly non-dominated) front, rank 1 goes to solutions that belong to the first\n\n\nCD Crowding Distance\nEach solution gets a **crowding distance** value — it tells you how \"isolated\" it is in objective space.\n\nThis encourages **diversity**.  \nThe more isolated you are → the more likely you are selected in a size-constrained set of solutions\n\nFitness Strategy:\nPressure Mechanism for Selection: Non-dominated Sorting\nPreservation of diversity: Crowding Distance\n",
      "type": "text",
      "width": 560,
      "x": 10080,
      "y": 760
    },
    {
      "height": 309,
      "id": "f1811824cbd2eada",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Reproduction\n\n1. Get 2 children per pair (for every pair of parents):\n\t- with p_c: clone both parents into next generation\n\t- with 1-p_c: pick random cross-over bit, swap to get two children\n2. For each child, for each gene, flip the gene's bit with probability p_m\n\n",
      "type": "text",
      "width": 338,
      "x": 9262,
      "y": 191
    },
    {
      "height": 150,
      "id": "5bdd725fd4849284",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Evaluation Criterion\na measure for judging how good a solution is, often linked to the fitness function.\n",
      "type": "text",
      "width": 400,
      "x": 9080,
      "y": 580
    },
    {
      "height": 44,
      "id": "49551d8af2d21033",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Solution form",
      "type": "text",
      "width": 191,
      "x": 8600,
      "y": 700
    },
    {
      "height": 44,
      "id": "fd72204162328e16",
      "styleAttributes": {
        "border": "invisible",
        "textAlign": "center"
      },
      "text": "chromosome",
      "type": "text",
      "width": 187,
      "x": 8440,
      "y": 386
    },
    {
      "height": 92,
      "id": "5f8e47ce871e45b2",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Encoding\nEach chromosome is a candidate solution",
      "type": "text",
      "width": 296,
      "x": 8500,
      "y": 540
    },
    {
      "height": 342,
      "id": "eb8244278f7b9b65",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Multi-Objective Optimization with GA\n\nPro's:\n- GA supports non-linear objectives\n- GA doesn't assume the shape/continuity of the pareto front\n- GA is flexible, works for convoluted problems.\n- GA finds the Pareto solution set in a SINGLE RUN",
      "type": "text",
      "width": 297,
      "x": 10180,
      "y": 260
    },
    {
      "height": 60,
      "id": "04cab98a33a32310",
      "styleAttributes": {
        "border": "invisible",
        "textAlign": "center"
      },
      "text": "an optimization method using evolution-like steps to find good solutions.\n",
      "type": "text",
      "width": 440,
      "x": 8440,
      "y": -380
    },
    {
      "height": 295,
      "id": "328af62d958cab21",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Population\n![[chromosomefitness.png]]\n\n\n\n\nRandomly select an initial population of N chromosomes",
      "type": "text",
      "width": 280,
      "x": 8540,
      "y": 85
    },
    {
      "height": 249,
      "id": "cb619ba78ca4ed6e",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Evaluation\n![[fitnessofchromosome2.png]]\n\nCompute the fitness of all the chromosomes in the population\n\n",
      "type": "text",
      "width": 220,
      "x": 8580,
      "y": -220
    },
    {
      "height": 44,
      "id": "8d919a0652557279",
      "styleAttributes": {
        "border": "invisible",
        "textAlign": "center"
      },
      "text": "modified offspring",
      "type": "text",
      "width": 223,
      "x": 8860,
      "y": 160
    },
    {
      "height": 271,
      "id": "92f0e85f0d6f6f12",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Selection\n![[geneticalgorouletteselection.png]]\n\n\nKeep selecting two chromosomes for reproduction\n",
      "type": "text",
      "width": 268,
      "x": 9060,
      "y": -260
    },
    {
      "height": 44,
      "id": "aff43d0ec5183593",
      "styleAttributes": {
        "border": "invisible",
        "textAlign": "center"
      },
      "text": "parents",
      "type": "text",
      "width": 149,
      "x": 9120,
      "y": 147
    },
    {
      "height": 150,
      "id": "f0d5e18e15493701",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Action selection with delayed rewards\nchoosing actions when rewards come after a delay, not immediately.\n",
      "type": "text",
      "width": 400,
      "x": 8620,
      "y": 2220
    },
    {
      "height": 140,
      "id": "87605dcfbc30d53f",
      "styleAttributes": {
        "border": "dashed",
        "textAlign": "center"
      },
      "text": "Why not MLP?\n-Scales badly on input size\n-Ignores spatial structure: (learning from pixels is not locality sensitive\n-cannot handle translation: the same shape translated to another part of the image is not recognised.",
      "type": "text",
      "width": 580,
      "x": 2180,
      "y": 2180
    },
    {
      "file": "attachments/Pasted image 20250416233749.png",
      "height": 122,
      "id": "773c988f99c8c667",
      "type": "file",
      "width": 320,
      "x": 2180,
      "y": 2880
    },
    {
      "file": "attachments/Pasted image 20250416233814.png",
      "height": 400,
      "id": "1a1014ca7b137a26",
      "type": "file",
      "width": 975,
      "x": 2180,
      "y": 2360
    }
  ]
}